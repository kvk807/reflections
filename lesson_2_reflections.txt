What happens when you initialize a repository? Why do you need to do it?

    You are creating an empty git repository in the folder where you ran the git init command.  The git repository is viewed in Windows as a new folder that has several subfolders and files within it.

How is the staging area different from the working directory and the repository? What value do you think it offers?

    The staging area is a place that sits between the working directory and the repository.  You place files that you want to commit together in the staging area with the 'add' command and then you commmit them to the repository with the commit command.  The value this approach offers is that it allows you to select multiple files to add to the staging area and then commit them together in a single commit.

How can you use the staging area to make sure you have one commit per logical change?

    When you have made changes to a file that represent a single logical change and added that file to the staging area, you can go back and make changes to any other files that are affected by this change, then add them also to the staging area.  At this point when all affected files have been changed and added to the
    staging area you would now make your commit.

How do the diagrams help you visualize the branch structure?

    Diagrams show the current commit you are working on as well as where it fits in the overall structure of the commit history.  You can see if it is a part of the master branch or a new branch, and determine where new branchs diverged from the main branch.  This gives you an idea of the progression of the overWhat is the result of merging two branches together? Why do we represent it in the diagram the way we do?all development or project you're working on, especially when there are many developers working on the same project.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

    The result of merging two branches together is to update one of the branches so that each of the commits from the other is added to the first branch.  It does not delete the branch whose commits are added to the other branch, just combines the commits from both branches together.  It is represented by drawing a line from the bottom (last commit) of the branch whose commits are being added, to the branch where the commits will be added.  This provides a visual reference that commits from the second branch have been merged with the first branch.

